{"ast":null,"code":"var _jsxFileName = \"/home/remon/\\uBC14\\uD0D5\\uD654\\uBA74/telescope_server/SW_Festival/src/components/StarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RotatingSphere() {\n  _s();\n  const canvasRef = useRef(null);\n  const previousMousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const isDragging = useRef(false);\n  const scale = useRef(1);\n  const textLabelRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    // Scene\n    const scene = new THREE.Scene();\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({\n      canvas\n    });\n    renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n    // Geometry\n    const geometry = new THREE.SphereGeometry(2, 32, 32);\n\n    // Material\n    const material = new THREE.MeshBasicMaterial({\n      color: 'lightblue',\n      wireframe: true\n    });\n\n    // Mesh\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Circle\n    const circleGeometry = new THREE.CircleGeometry(0.2, 32);\n    const circleMaterial = new THREE.MeshBasicMaterial({\n      color: 'red'\n    });\n    const circle = new THREE.Mesh(circleGeometry, circleMaterial);\n    mesh.add(circle);\n    circle.position.set(1, 0, 0);\n\n    // Text\n    const loader = new THREE.FontLoader();\n    loader.load(function (font) {\n      const textGeometry = new THREE.TextGeometry('Hello', {\n        font: font,\n        size: 0.2,\n        height: 0.01\n      });\n      const textMaterial = new THREE.MeshBasicMaterial({\n        color: 'black'\n      });\n      const textLabel = new THREE.Mesh(textGeometry, textMaterial);\n      textLabel.position.set(2, 0, 0);\n      textLabel.visible = false;\n      textLabelRef.current = textLabel;\n      scene.add(textLabel);\n    });\n\n    // Mouse events\n    function handleMouseDown(event) {\n      isDragging.current = true;\n      previousMousePosition.current = {\n        x: event.clientX,\n        y: event.clientY\n      };\n    }\n    function handleMouseUp(event) {\n      isDragging.current = false;\n    }\n    function handleMouseMove(event) {\n      if (!isDragging.current) return;\n      const {\n        clientX,\n        clientY\n      } = event;\n      const delta = {\n        x: clientX - previousMousePosition.current.x,\n        y: clientY - previousMousePosition.current.y\n      };\n      mesh.rotation.x += delta.y * 0.01;\n      mesh.rotation.y += delta.x * 0.01;\n      previousMousePosition.current = {\n        x: clientX,\n        y: clientY\n      };\n    }\n    function handleMouseWheel(event) {\n      const delta = Math.sign(event.deltaY);\n      scale.current += delta * 0.1;\n      scale.current = Math.max(scale.current, 0.1);\n      mesh.scale.set(scale.current, scale.current, scale.current);\n    }\n    function handleCircleClick() {\n      textLabelRef.current.visible = !textLabelRef.current.visible;\n    }\n\n    // Event listeners\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('wheel', handleMouseWheel);\n    circle.addEventListener('click', handleCircleClick);\n\n    // Animation\n    function animate() {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n    }\n    animate();\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('wheel', handleMouseWheel);\n      circle.removeEventListener('click', handleCircleClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 400,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n}\n_s(RotatingSphere, \"WgbQWWcdPoehnkOy/dfeyAVddZw=\");\n_c = RotatingSphere;\nvar _c;\n$RefreshReg$(_c, \"RotatingSphere\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","FontLoader","jsxDEV","_jsxDEV","RotatingSphere","_s","canvasRef","previousMousePosition","x","y","isDragging","scale","textLabelRef","canvas","current","scene","Scene","camera","PerspectiveCamera","clientWidth","clientHeight","position","z","renderer","WebGLRenderer","setSize","geometry","SphereGeometry","material","MeshBasicMaterial","color","wireframe","mesh","Mesh","add","circleGeometry","CircleGeometry","circleMaterial","circle","set","loader","load","font","textGeometry","TextGeometry","size","height","textMaterial","textLabel","visible","handleMouseDown","event","clientX","clientY","handleMouseUp","handleMouseMove","delta","rotation","handleMouseWheel","Math","sign","deltaY","max","handleCircleClick","addEventListener","animate","requestAnimationFrame","render","removeEventListener","ref","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/remon/바탕화면/telescope_server/SW_Festival/src/components/StarChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { FontLoader } from 'three/examples/jsm/loaders/FontLoader';\n\nexport default function RotatingSphere() {\n  const canvasRef = useRef(null);\n  const previousMousePosition = useRef({ x: 0, y: 0 });\n  const isDragging = useRef(false);\n  const scale = useRef(1);\n  const textLabelRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    // Scene\n    const scene = new THREE.Scene();\n\n    // Camera\n    const camera = new THREE.PerspectiveCamera(75, canvas.clientWidth / canvas.clientHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    // Renderer\n    const renderer = new THREE.WebGLRenderer({ canvas });\n    renderer.setSize(canvas.clientWidth, canvas.clientHeight);\n\n    // Geometry\n    const geometry = new THREE.SphereGeometry(2, 32, 32);\n\n    // Material\n    const material = new THREE.MeshBasicMaterial({ color: 'lightblue', wireframe: true });\n\n    // Mesh\n    const mesh = new THREE.Mesh(geometry, material);\n    scene.add(mesh);\n\n    // Circle\n    const circleGeometry = new THREE.CircleGeometry(0.2, 32);\n    const circleMaterial = new THREE.MeshBasicMaterial({ color: 'red' });\n    const circle = new THREE.Mesh(circleGeometry, circleMaterial);\n    mesh.add(circle);\n    circle.position.set(1, 0, 0);\n\n    // Text\n    const loader = new THREE.FontLoader();\n    loader.load(function (font) {\n      const textGeometry = new THREE.TextGeometry('Hello', {\n        font: font,\n        size: 0.2,\n        height: 0.01,\n      });\n      const textMaterial = new THREE.MeshBasicMaterial({ color: 'black' });\n      const textLabel = new THREE.Mesh(textGeometry, textMaterial);\n      textLabel.position.set(2, 0, 0);\n      textLabel.visible = false;\n      textLabelRef.current = textLabel;\n      scene.add(textLabel);\n    });\n\n    // Mouse events\n    function handleMouseDown(event) {\n      isDragging.current = true;\n      previousMousePosition.current = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n    }\n\n    function handleMouseUp(event) {\n      isDragging.current = false;\n    }\n\n    function handleMouseMove(event) {\n      if (!isDragging.current) return;\n\n      const { clientX, clientY } = event;\n      const delta = {\n        x: clientX - previousMousePosition.current.x,\n        y: clientY - previousMousePosition.current.y,\n      };\n\n      mesh.rotation.x += delta.y * 0.01;\n      mesh.rotation.y += delta.x * 0.01;\n\n      previousMousePosition.current = {\n        x: clientX,\n        y: clientY,\n      };\n    }\n\n    function handleMouseWheel(event) {\n      const delta = Math.sign(event.deltaY);\n\n      scale.current += delta * 0.1;\n      scale.current = Math.max(scale.current, 0.1);\n\n      mesh.scale.set(scale.current, scale.current, scale.current);\n    }\n\n    function handleCircleClick() {\n      textLabelRef.current.visible = !textLabelRef.current.visible;\n    }\n\n    // Event listeners\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('wheel', handleMouseWheel);\n    circle.addEventListener('click', handleCircleClick);\n\n    // Animation\n    function animate() {\n      requestAnimationFrame(animate);\n\n      renderer.render(scene, camera);\n    }\n\n    animate();\n\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('wheel', handleMouseWheel);\n      circle.removeEventListener('click', handleCircleClick);\n    };\n  }, []);\n\n  return <canvas ref={canvasRef} width={400} height={400} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}