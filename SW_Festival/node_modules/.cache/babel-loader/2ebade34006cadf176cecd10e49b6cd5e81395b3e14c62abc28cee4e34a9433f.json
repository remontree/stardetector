{"ast":null,"code":"var _jsxFileName = \"/home/remon/\\uBC14\\uD0D5\\uD654\\uBA74/telescope_server/SW_Festival/src/components/StarChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RotatingSphere() {\n  _s();\n  const canvasRef = useRef(null);\n  const [rotation, setRotation] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const previousMousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n    function drawSphere() {\n      context.clearRect(0, 0, width, height);\n\n      // Draw the sphere\n      context.beginPath();\n      context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI);\n      context.fillStyle = 'lightblue';\n      context.fill();\n\n      // Draw grid lines\n      const gridSize = 20;\n      context.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n      for (let x = 0; x <= width; x += gridSize) {\n        context.beginPath();\n        context.moveTo(x, 0);\n        context.lineTo(x, height);\n        context.stroke();\n      }\n      for (let y = 0; y <= height; y += gridSize) {\n        context.beginPath();\n        context.moveTo(0, y);\n        context.lineTo(width, y);\n        context.stroke();\n      }\n\n      // Draw pattern\n      const patternSize = 40;\n      context.fillStyle = 'rgba(255, 255, 255, 0.1)';\n      for (let x = 0; x < width; x += patternSize) {\n        for (let y = 0; y < height; y += patternSize) {\n          if ((x / patternSize + y / patternSize) % 2 === 0) {\n            context.fillRect(x, y, patternSize, patternSize);\n          }\n        }\n      }\n    }\n    function handleMouseDown(event) {\n      setIsDragging(true);\n      previousMousePosition.current = {\n        x: event.clientX,\n        y: event.clientY\n      };\n    }\n    function handleMouseUp() {\n      setIsDragging(false);\n    }\n    function handleMouseMove(event) {\n      if (!isDragging) return;\n      const {\n        clientX,\n        clientY\n      } = event;\n      const delta = {\n        x: clientX - previousMousePosition.current.x,\n        y: clientY - previousMousePosition.current.y\n      };\n      setRotation(prevRotation => ({\n        x: prevRotation.x + delta.y * 0.005,\n        y: prevRotation.y + delta.x * 0.005\n      }));\n      previousMousePosition.current = {\n        x: clientX,\n        y: clientY\n      };\n    }\n    function animate() {\n      context.clearRect(0, 0, width, height);\n\n      // Apply rotation transform\n      context.translate(width / 2, height / 2);\n      context.rotate(rotation.x);\n      context.rotate(rotation.y);\n      context.translate(-width / 2, -height / 2);\n      drawSphere();\n      requestAnimationFrame(animate);\n    }\n    drawSphere();\n    animate();\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [isDragging, rotation]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 400,\n    height: 400\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 10\n  }, this);\n}\n_s(RotatingSphere, \"P5EY4Y0pvOBsRv9tKJ2JKNlcSfg=\");\n_c = RotatingSphere;\nvar _c;\n$RefreshReg$(_c, \"RotatingSphere\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","RotatingSphere","_s","canvasRef","rotation","setRotation","x","y","isDragging","setIsDragging","previousMousePosition","canvas","current","context","getContext","width","height","drawSphere","clearRect","beginPath","arc","Math","min","PI","fillStyle","fill","gridSize","strokeStyle","moveTo","lineTo","stroke","patternSize","fillRect","handleMouseDown","event","clientX","clientY","handleMouseUp","handleMouseMove","delta","prevRotation","animate","translate","rotate","requestAnimationFrame","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/remon/바탕화면/telescope_server/SW_Festival/src/components/StarChart.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nexport default function RotatingSphere() {\n  const canvasRef = useRef(null);\n  const [rotation, setRotation] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const previousMousePosition = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const width = canvas.width;\n    const height = canvas.height;\n\n    function drawSphere() {\n      context.clearRect(0, 0, width, height);\n\n      // Draw the sphere\n      context.beginPath();\n      context.arc(width / 2, height / 2, Math.min(width, height) / 2, 0, 2 * Math.PI);\n      context.fillStyle = 'lightblue';\n      context.fill();\n\n      // Draw grid lines\n      const gridSize = 20;\n      context.strokeStyle = 'rgba(0, 0, 0, 0.3)';\n      for (let x = 0; x <= width; x += gridSize) {\n        context.beginPath();\n        context.moveTo(x, 0);\n        context.lineTo(x, height);\n        context.stroke();\n      }\n      for (let y = 0; y <= height; y += gridSize) {\n        context.beginPath();\n        context.moveTo(0, y);\n        context.lineTo(width, y);\n        context.stroke();\n      }\n\n      // Draw pattern\n      const patternSize = 40;\n      context.fillStyle = 'rgba(255, 255, 255, 0.1)';\n      for (let x = 0; x < width; x += patternSize) {\n        for (let y = 0; y < height; y += patternSize) {\n          if ((x / patternSize + y / patternSize) % 2 === 0) {\n            context.fillRect(x, y, patternSize, patternSize);\n          }\n        }\n      }\n    }\n\n    function handleMouseDown(event) {\n      setIsDragging(true);\n      previousMousePosition.current = {\n        x: event.clientX,\n        y: event.clientY,\n      };\n    }\n\n    function handleMouseUp() {\n      setIsDragging(false);\n    }\n\n    function handleMouseMove(event) {\n      if (!isDragging) return;\n\n      const { clientX, clientY } = event;\n      const delta = {\n        x: clientX - previousMousePosition.current.x,\n        y: clientY - previousMousePosition.current.y,\n      };\n\n      setRotation((prevRotation) => ({\n        x: prevRotation.x + delta.y * 0.005,\n        y: prevRotation.y + delta.x * 0.005,\n      }));\n\n      previousMousePosition.current = {\n        x: clientX,\n        y: clientY,\n      };\n    }\n\n    function animate() {\n      context.clearRect(0, 0, width, height);\n\n      // Apply rotation transform\n      context.translate(width / 2, height / 2);\n      context.rotate(rotation.x);\n      context.rotate(rotation.y);\n      context.translate(-width / 2, -height / 2);\n\n      drawSphere();\n\n      requestAnimationFrame(animate);\n    }\n\n    drawSphere();\n    animate();\n\n    canvas.addEventListener('mousedown', handleMouseDown);\n    canvas.addEventListener('mouseup', handleMouseUp);\n    canvas.addEventListener('mousemove', handleMouseMove);\n\n    return () => {\n      canvas.removeEventListener('mousedown', handleMouseDown);\n      canvas.removeEventListener('mouseup', handleMouseUp);\n      canvas.removeEventListener('mousemove', handleMouseMove);\n    };\n  }, [isDragging, rotation]);\n\n  return <canvas ref={canvasRef} width={400} height={400} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}