{"ast":null,"code":"var _jsxFileName = \"/home/remon/\\uBC14\\uD0D5\\uD654\\uBA74/telescope_server/SW_Festival/src/components/celestialSphere2/celestial.jsx\",\n  _s = $RefreshSig$();\nimport * as d3 from 'd3';\nimport React, { useEffect, useState, useRef } from 'react';\n\n// D3와 Celestial 관련 스크립트 파일들은 public 폴더에 넣고 아래와 같이 static 경로로 접근합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst D3_SCRIPT = '/static/d3.min.js';\nconst D3_GEO_SCRIPT = '/static/d3.geo.projection.min.js';\nconst CELESTIAL_SCRIPT = '/static/celestial.min.js';\nconst loadScript = src => {\n  return new Promise(resolve => {\n    const script = document.createElement('script');\n    script.src = src;\n    script.addEventListener('load', () => {\n      resolve(true);\n    });\n    document.body.appendChild(script);\n  });\n};\nconst CelestialComponent = () => {\n  _s();\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n  const [starname, setStarname] = useState(localStorage.getItem('starname') || '');\n  const prevX = useRef(x);\n  const prevY = useRef(y);\n  useEffect(() => {\n    prevX.current = x;\n    prevY.current = y;\n  }, [x, y]);\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const newLatitude = localStorage.getItem('Latitude');\n      const newAzimuth = localStorage.getItem('Azimuth');\n      if (newLatitude !== x.toString() || newAzimuth !== y.toString()) {\n        setX(Number(newLatitude));\n        setY(Number(newAzimuth));\n      }\n    }, 1000); // 매 초마다 latitude, azimuth 체크\n\n    return () => {\n      clearInterval(intervalId); // 컴포넌트 unmount 시에 interval 해제\n    };\n  }, [x, y]);\n  const intervalId = setInterval(() => {\n    const newStarname = localStorage.getItem('starname');\n    if (newStarname !== starname) {\n      setStarname(newStarname);\n    }\n  }, 1000); // 매 초마다 starname 체크\n\n  useEffect(() => {\n    var urlA = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/constellations.json';\n    d3.json(urlA).then(function (d) {\n      for (let i = 0; i < 90; i++) {\n        if (d.features[i] && d.features[i].properties && d.features[i].properties.ko) {\n          let name = d.features[i].properties.ko;\n          console.log(d.features[i].properties.ko);\n          if (name === starname) {\n            console.log(d.features[i].geometry.coordinates); // 고물자리의 좌표 설정\n            let coordint = d.features[i].geometry.coordinates;\n            setX(coordint[0]);\n            setY(coordint[1]);\n            fetch('http://127.0.0.1:5000/AutoControl', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                Accept: 'application/json'\n              },\n              body: JSON.stringify({\n                ra: coordint[0],\n                dec: coordint[1]\n              })\n            }).then(response => response.json()).then(result => {\n              // 서버로부터 받은 응답 처리\n              console.log(coordint);\n              console.log(x);\n              console.log(y);\n            }).catch(error => {\n              // 에러 처리\n              console.error('Error:', error);\n            });\n          }\n        } else {\n          console.log('Undefined or missing property at index', i);\n        }\n      }\n    });\n  }, [starname]); // 종속성 배열이 비어 있음\n\n  useEffect(() => {\n    if (prevX.current === 12 && prevY.current === 12 && x === 12 && y === 12) {\n      return;\n    } else if (prevX.current === 0 && prevY.current === 0 && x === 0 && y === 0) {\n      return;\n    }\n    const loadAllScripts = async () => {\n      await loadScript(D3_SCRIPT);\n      await loadScript(D3_GEO_SCRIPT);\n      await loadScript(CELESTIAL_SCRIPT);\n      const config = {\n        width: 900,\n        projection: 'airy',\n        center: [x, y],\n        //안드로메다 자리 0.92, 44.72\n        form: true,\n        background: {\n          fill: '#333',\n          stroke: 'white',\n          opacity: 1,\n          width: 1\n        },\n        formFields: {\n          location: false,\n          general: false,\n          stars: true,\n          dsos: false,\n          constellations: true,\n          lines: false,\n          other: true\n        },\n        culture: 'ko',\n        // en으로 수정_sja\n        container: 'celestial-map',\n        datapath: 'https://ofrohn.github.io/data/',\n        constellations: {\n          show: true,\n          //Show constellations\n          names: true,\n          //Show constellation names\n          namesType: 'ko',\n          //en으로 수정_ sja\n          nameStyle: {\n            fill: ['#fec', '#f6c', '#fec'],\n            opacity: 0.9,\n            font: [\"bold 14px 'Lucida Sans Unicode', Trebuchet, Helvetica, Arial, sans-serif\", \"18px 'Lucida Sans Unicode', Trebuchet, Helvetica, Arial, sans-serif\", \"14px 'Lucida Sans Unicode', Trebuchet, Helvetica, Arial, sans-serif\"],\n            align: 'center',\n            baseline: 'middle'\n          },\n          lines: true,\n          //Show constellation lines\n          lineStyle: {\n            stroke: ['#99c', '#f6c', '#99c'],\n            width: [2, 2.5, 2],\n            opacity: 0.75\n          },\n          bounds: true,\n          //Show constellation boundaries\n          boundStyle: {\n            stroke: '#ffff00',\n            width: 1.0,\n            opacity: 0.7,\n            dash: [8, 4, 2, 4]\n          }\n        },\n        stars: {\n          limit: 5,\n          propername: true,\n          propernameStyle: {\n            fill: '#9999bb',\n            font: \"13px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif\",\n            align: 'right',\n            baseline: 'bottom'\n          },\n          propernameLimit: 2.5,\n          designation: false,\n          designationStyle: {\n            fill: '#9999bb',\n            font: \"11px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif\",\n            align: 'left',\n            baseline: 'top'\n          },\n          designationLimit: 2.5\n        },\n        dsos: {\n          show: false\n        },\n        mw: {\n          style: {\n            fill: '#ffffff',\n            opacity: 0.1\n          }\n        },\n        planets: {\n          //Show planet locations\n          show: false\n        }\n      };\n      console.log('CENTER바뀜::', [x, y]);\n      window.Celestial.display(config);\n    };\n    loadAllScripts();\n  }, [x, y]);\n  return (\n    /*#__PURE__*/\n    //  marginLeft: '100px'으로 celestial 전체 위치 이동_ sja\n    _jsxDEV(\"div\", {\n      style: {\n        marginLeft: '70px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"celestial-map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"celestial-form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(CelestialComponent, \"BXjz2x6c/7PBbQxMG+h+td+Delk=\");\n_c = CelestialComponent;\nexport default CelestialComponent;\nvar _c;\n$RefreshReg$(_c, \"CelestialComponent\");","map":{"version":3,"names":["d3","React","useEffect","useState","useRef","jsxDEV","_jsxDEV","D3_SCRIPT","D3_GEO_SCRIPT","CELESTIAL_SCRIPT","loadScript","src","Promise","resolve","script","document","createElement","addEventListener","body","appendChild","CelestialComponent","_s","x","setX","y","setY","starname","setStarname","localStorage","getItem","prevX","prevY","current","intervalId","setInterval","newLatitude","newAzimuth","toString","Number","clearInterval","newStarname","urlA","json","then","d","i","features","properties","ko","name","console","log","geometry","coordinates","coordint","fetch","method","headers","Accept","JSON","stringify","ra","dec","response","result","catch","error","loadAllScripts","config","width","projection","center","form","background","fill","stroke","opacity","formFields","location","general","stars","dsos","constellations","lines","other","culture","container","datapath","show","names","namesType","nameStyle","font","align","baseline","lineStyle","bounds","boundStyle","dash","limit","propername","propernameStyle","propernameLimit","designation","designationStyle","designationLimit","mw","style","planets","window","Celestial","display","marginLeft","children","overflow","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/remon/바탕화면/telescope_server/SW_Festival/src/components/celestialSphere2/celestial.jsx"],"sourcesContent":["import * as d3 from 'd3';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\n\r\n// D3와 Celestial 관련 스크립트 파일들은 public 폴더에 넣고 아래와 같이 static 경로로 접근합니다.\r\nconst D3_SCRIPT = '/static/d3.min.js';\r\nconst D3_GEO_SCRIPT = '/static/d3.geo.projection.min.js';\r\nconst CELESTIAL_SCRIPT = '/static/celestial.min.js';\r\n\r\nconst loadScript = (src) => {\r\n  return new Promise((resolve) => {\r\n    const script = document.createElement('script');\r\n    script.src = src;\r\n    script.addEventListener('load', () => {\r\n      resolve(true);\r\n    });\r\n    document.body.appendChild(script);\r\n  });\r\n};\r\n\r\nconst CelestialComponent = () => {\r\n  const [x, setX] = useState(0);\r\n  const [y, setY] = useState(0);\r\n  const [starname, setStarname] = useState(localStorage.getItem('starname') || '');\r\n\r\n  const prevX = useRef(x);\r\n  const prevY = useRef(y);\r\n\r\n  useEffect(() => {\r\n    prevX.current = x;\r\n    prevY.current = y;\r\n  }, [x, y]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      const newLatitude = localStorage.getItem('Latitude');\r\n      const newAzimuth = localStorage.getItem('Azimuth');\r\n\r\n      if (newLatitude !== x.toString() || newAzimuth !== y.toString()) {\r\n        setX(Number(newLatitude));\r\n        setY(Number(newAzimuth));\r\n      }\r\n    }, 1000); // 매 초마다 latitude, azimuth 체크\r\n\r\n    return () => {\r\n      clearInterval(intervalId); // 컴포넌트 unmount 시에 interval 해제\r\n    };\r\n  }, [x, y]);\r\n\r\n  const intervalId = setInterval(() => {\r\n    const newStarname = localStorage.getItem('starname');\r\n    if (newStarname !== starname) {\r\n      setStarname(newStarname);\r\n    }\r\n  }, 1000); // 매 초마다 starname 체크\r\n\r\n  useEffect(() => {\r\n    var urlA = 'https://raw.githubusercontent.com/ofrohn/d3-celestial/master/data/constellations.json';\r\n    d3.json(urlA).then(function (d) {\r\n      for (let i = 0; i < 90; i++) {\r\n        if (d.features[i] && d.features[i].properties && d.features[i].properties.ko) {\r\n          let name = d.features[i].properties.ko;\r\n          console.log(d.features[i].properties.ko);\r\n          if (name === starname) {\r\n            console.log(d.features[i].geometry.coordinates); // 고물자리의 좌표 설정\r\n            let coordint = d.features[i].geometry.coordinates;\r\n            setX(coordint[0]);\r\n            setY(coordint[1]);\r\n            fetch('http://127.0.0.1:5000/AutoControl', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: 'application/json',\r\n              },\r\n              body: JSON.stringify({ ra: coordint[0], dec: coordint[1] }),\r\n            })\r\n              .then((response) => response.json())\r\n              .then((result) => {\r\n                // 서버로부터 받은 응답 처리\r\n                console.log(coordint);\r\n                console.log(x);\r\n                console.log(y);\r\n              })\r\n              .catch((error) => {\r\n                // 에러 처리\r\n                console.error('Error:', error);\r\n              });\r\n          }\r\n        } else {\r\n          console.log('Undefined or missing property at index', i);\r\n        }\r\n      }\r\n    });\r\n  }, [starname]); // 종속성 배열이 비어 있음\r\n\r\n  useEffect(() => {\r\n    if (prevX.current === 12 && prevY.current === 12 && x === 12 && y === 12) {\r\n      return;\r\n    } else if (prevX.current === 0 && prevY.current === 0 && x === 0 && y === 0) {\r\n      return;\r\n    }\r\n    const loadAllScripts = async () => {\r\n      await loadScript(D3_SCRIPT);\r\n      await loadScript(D3_GEO_SCRIPT);\r\n      await loadScript(CELESTIAL_SCRIPT);\r\n\r\n      const config = {\r\n        width: 900,\r\n        projection: 'airy',\r\n        center: [x, y], //안드로메다 자리 0.92, 44.72\r\n        form: true,\r\n        background: { fill: '#333', stroke: 'white', opacity: 1, width: 1 },\r\n        formFields: {\r\n          location: false,\r\n          general: false,\r\n          stars: true,\r\n          dsos: false,\r\n          constellations: true,\r\n          lines: false,\r\n          other: true,\r\n        },\r\n        culture: 'ko', // en으로 수정_sja\r\n        container: 'celestial-map',\r\n        datapath: 'https://ofrohn.github.io/data/',\r\n        constellations: {\r\n          show: true, //Show constellations\r\n          names: true, //Show constellation names\r\n          namesType: 'ko', //en으로 수정_ sja\r\n          nameStyle: {\r\n            fill: ['#fec', '#f6c', '#fec'],\r\n            opacity: 0.9,\r\n            font: [\r\n              \"bold 14px 'Lucida Sans Unicode', Trebuchet, Helvetica, Arial, sans-serif\",\r\n              \"18px 'Lucida Sans Unicode', Trebuchet, Helvetica, Arial, sans-serif\",\r\n              \"14px 'Lucida Sans Unicode', Trebuchet, Helvetica, Arial, sans-serif\",\r\n            ],\r\n            align: 'center',\r\n            baseline: 'middle',\r\n          },\r\n          lines: true, //Show constellation lines\r\n          lineStyle: { stroke: ['#99c', '#f6c', '#99c'], width: [2, 2.5, 2], opacity: 0.75 },\r\n          bounds: true, //Show constellation boundaries\r\n          boundStyle: { stroke: '#ffff00', width: 1.0, opacity: 0.7, dash: [8, 4, 2, 4] },\r\n        },\r\n        stars: {\r\n          limit: 5,\r\n          propername: true,\r\n          propernameStyle: {\r\n            fill: '#9999bb',\r\n            font: \"13px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif\",\r\n            align: 'right',\r\n            baseline: 'bottom',\r\n          },\r\n          propernameLimit: 2.5,\r\n          designation: false,\r\n          designationStyle: {\r\n            fill: '#9999bb',\r\n            font: \"11px 'Palatino Linotype', Georgia, Times, 'Times Roman', serif\",\r\n            align: 'left',\r\n            baseline: 'top',\r\n          },\r\n          designationLimit: 2.5,\r\n        },\r\n        dsos: {\r\n          show: false,\r\n        },\r\n        mw: {\r\n          style: { fill: '#ffffff', opacity: 0.1 },\r\n        },\r\n        planets: {\r\n          //Show planet locations\r\n          show: false,\r\n        },\r\n      };\r\n      console.log('CENTER바뀜::', [x, y]);\r\n      window.Celestial.display(config);\r\n    };\r\n\r\n    loadAllScripts();\r\n  }, [x, y]);\r\n\r\n  return (\r\n    //  marginLeft: '100px'으로 celestial 전체 위치 이동_ sja\r\n    <div style={{ marginLeft: '70px' }}>\r\n      <div style={{ overflow: 'hidden' }}>\r\n        <div id='celestial-map'></div>\r\n      </div>\r\n      <div id='celestial-form'></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CelestialComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}